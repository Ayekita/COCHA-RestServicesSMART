package com.cocha.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.cocha.dto.bmcliDTO;
import com.cocha.dto.datosSalidaDTO;
import com.cocha.dto.vmlcdDTO;
import com.cocha.utiles.FechasUtil;

public class SqlSmartDao {

	public bmcliDTO getCliente(String nemote, Connection conJdbc)throws SQLException, ClassNotFoundException {
		PreparedStatement ps = null;
		ResultSet rs = null;
		bmcliDTO cliente = new bmcliDTO();
		try {	
			String query = "";	
			query =  "SELECT BMCLI_NUMRUT, BMCLI_DIGVER, BMCLI_NEMOTE, BMCLI_NEMOGR, BMCLI_RAZOSOC, BMCLI_LIMCRE, BMCLI_LIMCREUSD,";
			query += "BMCLI_TIPOCL, BMCLI_FRECFAC, BMCLI_REQOC FROM P_BMCLI02 WHERE BMCLI_NEMOTE = '" + nemote +"'";
			ps = conJdbc.prepareStatement(query);
			rs = ps.executeQuery();	
			while(rs.next()) {			
				cliente.setRut(rs.getInt("BMCLI_NUMRUT"));
				cliente.setDv(rs.getString("BMCLI_DIGVER"));
				cliente.setNemote(rs.getString("BMCLI_NEMOTE"));
				cliente.setNemogr(rs.getString("BMCLI_NEMOGR"));
				cliente.setRazonSocial(rs.getString("BMCLI_RAZOSOC"));
				cliente.setLineaCLP(rs.getLong("BMCLI_LIMCRE"));
				cliente.setLineaUSD(rs.getDouble("BMCLI_LIMCREUSD"));
				cliente.setTipo(rs.getString("BMCLI_TIPOCL"));
				cliente.setFrecuencia(rs.getString("BMCLI_FRECFAC"));
				if(rs.getString("BMCLI_FRECFAC").equals("")){
					cliente.setFrecuencia("D");
				}				
				cliente.setReqOC(rs.getString("BMCLI_REQOC"));
			}
		} 
		catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}	
		return cliente;
	}

	public int obtenerTasaCambio(long fecha, Connection con) throws SQLException {
		PreparedStatement ps = null;
		ResultSet rs = null;
		String query = "";
		int tasaCambio = 0;
		try {
			query =  "SELECT BMLAT_VALTAS FROM P_BMLAT01 WHERE BMLAT_CODLAE = 45 AND BMLAT_FECTAS = " + fecha;
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();		
			while(rs.next()) {
				tasaCambio = rs.getInt("BMLAT_VALTAS");
			}
		} 
		catch (SQLException e) {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}	
		return tasaCambio;	
	}

	public long obtenerLineaUtilizadaCLP(int numRut, Connection con)throws SQLException, ClassNotFoundException {
		PreparedStatement ps = null;
		ResultSet rs = null;
		long lineaUtilizadaCLP = 0;
		String query = "";	
		try {	
			query =  "SELECT FMSCT_SALCLP, FMSCT_TRCLP FROM P_FMSCT03 WHERE FMSCT_NUMRUT = " + numRut;
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	
			while(rs.next()) {
				lineaUtilizadaCLP = rs.getLong("FMSCT_SALCLP");	
				lineaUtilizadaCLP += rs.getLong("FMSCT_TRCLP");	
			}	
		} 
		catch (SQLException e) {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}		
		return lineaUtilizadaCLP;
	}

	public double obtenerLineaUtilizadaUSD(int numRut, Connection con)throws SQLException, ClassNotFoundException {
		double lineaUtilizada = 0;
		String query = "";	
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {	
			query =  "SELECT FMSCT_SALUSD, FMSCT_TRUSD FROM P_FMSCT03 WHERE FMSCT_NUMRUT = " + numRut;
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	
			while(rs.next()) {
				lineaUtilizada = rs.getDouble("FMSCT_SALUSD");
				lineaUtilizada += rs.getDouble("FMSCT_TRUSD");
			}	
		} 
		catch (SQLException e) {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}		
		return lineaUtilizada;
	}


	//separame en partes a lo felipito :(
	public boolean ingresoLineaCredito(int rutCli, String moneda, double valorServicio, long fechaFac, long horaFac, Connection con)
			throws Exception {
		boolean status = false;
		PreparedStatement ps = null;
		PreparedStatement ps2 = null;	
		PreparedStatement ps3 = null;	
		ResultSet rs = null;
		ResultSet rs2 = null;
		try {
			String query = "";

			query =  "SELECT COUNT (*) AS EXISTE ";	
			query += "FROM P_FMSCT03 ";
			query += "WHERE FMSCT_NUMRUT = " + rutCli;
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	

			while(rs.next()) {			
				if(rs.getInt("EXISTE") > 0) {			
					query =  "SELECT FMSCT_TRCLP, FMSCT_TRUSD ";	
					query += "FROM P_FMSCT03 ";
					query += "WHERE FMSCT_NUMRUT = " + rutCli;
					ps2 = con.prepareStatement(query);
					rs2 = ps2.executeQuery();	

					double valor = 0;
					while(rs2.next()) {
						if(moneda.equals("CLP")) {			
							valor = valorServicio + rs2.getDouble("FMSCT_TRCLP") ;
							query =  "UPDATE FMSCT SET FMSCT_TRCLP = " + valor;	
							query += " WHERE FMSCT_NUMRUT = " + rutCli;
							ps3 = con.prepareStatement(query);
							ps3.execute();	
						}else if(moneda.equals("USD")) {	
							valor = valorServicio + rs2.getDouble("FMSCT_TRUSD") ;
							query =  "UPDATE FMSCT SET FMSCT_TRUSD = " + valor;	
							query += " WHERE FMSCT_NUMRUT = " + rutCli;
							ps3 = con.prepareStatement(query);
							ps3.execute();	
						}
					}
				}else {		
					query =  "INSERT INTO FMSCT (FMSCT_CODUSUAR, FMSCT_FECACT, FMSCT_FEULTRAN, FMSCT_HRULTRAN, FMSCT_NUMRUT";	
					query += ",FMSCT_TRCLP,FMSCT_TRUSD, FMSCT_SALCLP, FMSCT_SALUSD) ";	
					query += "VALUES('ONLINE'," + fechaFac + "," + fechaFac + "," + horaFac + "," + rutCli;
					if(moneda.equals("CLP")) {
						query += "," + valorServicio + ",0";
					}else if(moneda.equals("USD")) {
						query += ",0," + valorServicio;
					}
					query += ",0,0)";
					ps3 = con.prepareStatement(query);
					ps3.execute();	
				}
				status = true;
			}
		} 
		catch (Exception e){
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}	
		return status;
	}

	public boolean ingresoSobregiro(vmlcdDTO datos, Connection con) throws SQLException, ClassNotFoundException {
		boolean status = false;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			StringBuilder insert = new StringBuilder();
			insert.append("INSERT INTO VMLCD(VMLCD_AUTORIZA,VMLCD_ESTADO,VMLCD_FECCRE,VMLCD_FECMOD,VMLCD_HORCRE,VMLCD_HORMOD");
			insert.append(",VMLCD_MONLCA,VMLCD_MONLCD,VMLCD_MONVAL,VMLCD_NEMO,VMLCD_NUMNEG,VMLCD_USUCRE,VMLCD_USUMOD,VMLCD_VALLCA");
			insert.append(",VMLCD_VALLCD,VMLCD_VALTOT, VMLCD_RUT)");
			insert.append("values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

			ps = con.prepareStatement(insert.toString());

			ps.setString(1,datos.getAutoriza());
			ps.setInt(2,datos.getEstado());
			ps.setLong(3,datos.getFeccre());
			ps.setLong(4,datos.getFecmod());
			ps.setLong(5,datos.getHorcre());
			ps.setLong(6,datos.getHormod());
			ps.setString(7,datos.getMonlca());
			ps.setString(8,datos.getMonlcd());
			ps.setString(9,datos.getMonval());
			ps.setString(10,datos.getNemo());
			ps.setString(11,datos.getNumneg());
			ps.setString(12,datos.getUsucre());
			ps.setString(13,datos.getUsumod());
			if(datos.getMonval().equals("CLP")) {
				ps.setLong(14,datos.getVallca());
				ps.setLong(15,datos.getVallcd());
			}
			else if(datos.getMonval().equals("USD")) {
				ps.setDouble(14,datos.getVallcaUSD());
				ps.setDouble(15,datos.getVallcdUSD());

			}
			ps.setDouble(16,datos.getValtot());
			ps.setDouble(17,datos.getRut());

			ps.execute();

			status = true;
		} 
		catch (Exception e) {
			System.out.println(e);
			return false;
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}	
		return status;
	}

	public String existeNegPed(String numneg, int numped, Connection con) throws SQLException, ClassNotFoundException {
		String  existe = "Existe";
		String query = "";
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {	
			query = "SELECT COUNT(*) AS EXISTE FROM P_VMNEG01 WHERE VMNEG_NUMNEG = '" + numneg + "'";
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	
			while(rs.next()) {
				existe = "Existe";
				int c=0;
				if(rs.getInt("EXISTE") == 0) {
					existe = "El negocio " + numneg + " no existe en SMART";
				} else {
					ResultSet rs2 = null;
					if(c==0) {
						query = "SELECT COUNT(*) AS EXISTE FROM P_VMOSK02 WHERE VMOSK_NUMNEG = '" + numneg + "' AND VMOSK_NUMSOL = " + numped;
						ps = con.prepareStatement(query);
						rs2 = ps.executeQuery();	
						while(rs2.next()) {
							existe = "Existe";
							c=1;
							if(rs2.getInt("EXISTE") == 0) {
								existe = "El pedido " + numped + " no existe en SMART";
								c=0;
							}
						}
					}
					if(c==0) {
						query = "SELECT COUNT(*) AS EXISTE FROM P_VMOSN02 WHERE VMOSN_NUMNEG = '" + numneg + "' AND VMOSN_NUMSOL = " + numped;
						ps = con.prepareStatement(query);
						rs2 = ps.executeQuery();	
						while(rs2.next()) {
							existe = "Existe";
							c=1;
							if(rs2.getInt("EXISTE") == 0) {
								existe = "El pedido " + numped + " no existe en SMART";
								c=0;
							}
						}
					}
					if(c==0) {
						query = "SELECT COUNT(*) AS EXISTE FROM P_VMOSO02 WHERE VMOSO_NUMNEG = '" + numneg + "' AND VMOSO_NUMSOL = " + numped;
						ps = con.prepareStatement(query);
						rs2 = ps.executeQuery();	
						while(rs2.next())  {
							existe = "Existe";
							c=1;
							if(rs2.getInt("EXISTE") == 0)
							{
								existe = "El pedido " + numped + " no existe en SMART";
								c=0;
							}
						}
					}
					if(c==0) {
						query = "SELECT COUNT(*) AS EXISTE FROM P_VMACJ01 WHERE VMACJ_NUMNEG = '" + numneg + "' AND VMACJ_NUMSOL = " + numped;
						ps = con.prepareStatement(query);
						rs2 = ps.executeQuery();	
						while(rs2.next())  {
							existe = "Existe";
							c=1;
							if(rs2.getInt("EXISTE") == 0) {
								existe = "El pedido " + numped + " no existe en SMART";
								c=0;
							}
						}
					}			
				}
			}
		} 
		catch (Exception e)  {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}		
		return existe;		
	}

	public boolean controlFinanzasPedido(String numneg, int numped, long fechaFac, long horaFac, String usuarioFac, int rutCli, Connection con) 
			throws SQLException, ClassNotFoundException {
		boolean status = false;
		String query = "";	
		PreparedStatement ps = null;
		ResultSet rs = null;
		PreparedStatement ps2 = null;
		PreparedStatement ps3 = null;
		ResultSet rs3 = null;
		PreparedStatement ps4 = null;	

		try {	
			query =  "SELECT FMSFI_FLAGTR, FMSFI_INDSER, FMSFI_NUMPED, FMSFI_VALTOT, FMSFI_NUMNEG ";
			query += "FROM P_FMSFI04 WHERE FMSFI_NUMNEG = '" + numneg + "' AND FMSFI_NUMPED = " + numped;
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	
			while(rs.next()) {
				System.out.println("INICIO controlFacturacion WHILE");
				if(rs.getInt("FMSFI_FLAGTR") != 2) {				
					query =  "UPDATE FMSFI SET FMSFI_FLAGFAC = 2, FMSFI_FECAF = "+fechaFac+", FMSFI_HORAF = "+horaFac;
					query += ", FMSFI_USUAF = '" +usuarioFac+"', FMSFI_FLAGTR = 2 ";
					query += "WHERE FMSFI_NUMNEG = '" + numneg + "' AND FMSFI_NUMPED = " + numped;
					ps2 = con.prepareStatement(query);
					ps2.execute();	

					query =  "SELECT BMTAC_DATNUM1 ";
					query += "FROM P_BMTAC03 ";
					query += "WHERE BMTAC_TABLA = 23 AND BMTAC_REGI = 'VMOSA' ";
					ps3 = con.prepareStatement(query);
					rs3 = ps3.executeQuery();	
					int datnum = 0;
					while(rs3.next()) {
						datnum = rs3.getInt("BMTAC_DATNUM1");
					}

					if(rs.getString("FMSFI_INDSER").equals("K")) {				
						query =  "UPDATE P_VMOSK01 SET VMOSK_FLAGFAC = 2 ";
						if(datnum == 1) {
							query += ",VMOSK_MOVUSU = 'CHG' ";
						}							
						query += "WHERE VMOSK_NUMSOL = " + rs.getInt("FMSFI_NUMPED");
						ps3 = con.prepareStatement(query);
						ps3.execute();	
					}
					else  if(rs.getString("FMSFI_INDSER").equals("N")) {
						query =  "UPDATE P_VMOSN01 SET VMOSN_FLAGFAC = 2 ";
						if(datnum == 1) {
							query += ",VMOSN_MOVUSU = 'CHG' ";
						}							
						query += "WHERE VMOSN_NUMSOL = " + rs.getInt("FMSFI_NUMPED");
						ps3 = con.prepareStatement(query);
						ps3.execute();	
					}
					else  if(rs.getString("FMSFI_INDSER").equals("J")) {						
						query =  "UPDATE P_VMACJ01 SET VMACJ_FLAGFAC = 2 ";							
						query += "WHERE VMACJ_NUMSOL = " + rs.getInt("FMSFI_NUMPED");
						ps3 = con.prepareStatement(query);
						ps3.execute();	
					}
					else  if(rs.getString("FMSFI_INDSER").equals("O")) {					
						query =  "UPDATE P_VMOSO01 SET VMOSO_FLAGFAC = 2 ";							
						query += "WHERE VMOSO_NUMSOL = " + rs.getInt("FMSFI_NUMPED");
						ps3 = con.prepareStatement(query);
						ps3.execute();	
					}

					query =  "INSERT INTO VMPEL (VMPEL_EVENTO, VMPEL_FECTRAN, VMPEL_HORTRAN, VMPEL_ISPOPE, VMPEL_NUMNEG";	
					query += ",VMPEL_NUMPED, VMPEL_OPERA, VMPEL_USUTRAN) ";	
					query += "VALUES('AUTORIZACION DE FACTURACION'," + fechaFac + "," + horaFac + ", 'ONLINE','" + rs.getString("FMSFI_NUMNEG");
					query += "'," + rs.getInt("FMSFI_NUMPED") + ",'"+ rs.getString("FMSFI_INDSER") + "','"+ usuarioFac +"')";
					ps4 = con.prepareStatement(query);
					System.out.println(query);
					ps4.execute();	

				}
			}
			System.out.println("FIN controlFacturacion WHILE");
			status = true;
		} 
		catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}		
		return status;
	}

	public  void controlFinanzasNegocio(String numneg, long fechaFac, long horaFac, Connection con) throws SQLException, ClassNotFoundException {
		int existe = 0;
		String query = "";	
		PreparedStatement ps = null;
		ResultSet rs = null;
		try  {	
			query =  "SELECT FMSFI_FLAGFAC, FMSFI_FLAGORC, FMSFI_NUMPED, FMSFI_INDSER ";
			query += "FROM P_FMSFI04 WHERE FMSFI_NUMNEG = '" + numneg + "'";
			ps = con.prepareStatement(query);
			rs = ps.executeQuery();	

			while(rs.next())  {
				if(rs.getInt("FMSFI_FLAGFAC") == 1 || rs.getInt("FMSFI_FLAGFAC") == 3 || rs.getInt("FMSFI_FLAGORC") == 1 || rs.getInt("FMSFI_FLAGORC") == 3) {
					PreparedStatement ps2 = null;	
					ResultSet rs2 = null;	
					if(rs.getString("FMSFI_INDSER").equals("K")) {									
						query =  "SELECT COUNT (*) AS EXISTE ";
						query += "FROM P_VMOSK01 WHERE VMOSK_NUMSOL = " + rs.getInt("FMSFI_NUMPED") + " AND VMOSK_STATSA = 'KK'";
						ps2 = con.prepareStatement(query);
						rs2 = ps2.executeQuery();
						while(rs2.next())  {
							if(rs2.getInt("EXISTE") > 0) {
								existe = 1;	
							}
						}
					}
					else if(rs.getString("FMSFI_INDSER").equals("N")) {									
						query =  "SELECT COUNT (*) AS EXISTE ";
						query += "FROM P_VMOSN01 WHERE VMOSN_NUMSOL = " + rs.getInt("FMSFI_NUMPED") + " AND VMOSN_STATSA = 'KK'";
						ps2 = con.prepareStatement(query);
						rs2 = ps2.executeQuery();	
						while(rs2.next()){
							if(rs2.getInt("EXISTE") > 0) {
								existe = 1;	
							}
						}
					}
					else if(rs.getString("FMSFI_INDSER").equals("J")) {									
						query =  "SELECT COUNT (*) AS EXISTE ";
						query += "FROM P_VMACJ01 WHERE VMACJ_NUMSOL = " + rs.getInt("FMSFI_NUMPED") + " AND VMACJ_STATSA = 'KK'";
						ps2 = con.prepareStatement(query);
						rs2 = ps2.executeQuery();	
						while(rs2.next())  {
							if(rs2.getInt("EXISTE") > 0) {
								existe = 1;	
							}
						}
					}
					else if(rs.getString("FMSFI_INDSER").equals("O")) {									
						query =  "SELECT COUNT (*) AS EXISTE ";
						query += "FROM P_VMOSO01 WHERE VMOSO_NUMSOL = " + rs.getInt("FMSFI_NUMPED") + " AND VMOSO_STATSA = 'GK'";
						ps2 = con.prepareStatement(query);
						rs2 = ps2.executeQuery();	
						while(rs2.next())  {
							if(rs2.getInt("EXISTE") > 0) {
								existe = 1;	
							}
						}
					}
				}
				if(existe == 0) {
					PreparedStatement ps3 = null;	
					query =  "UPDATE VMNEG SET VMNEG_FECAFAC = " + fechaFac + ", VMNEG_HRAAFAC = " + horaFac + ", VMNEG_SUPFACT = 'ONL', VMNEG_FLAGFAC = 2 ";
					query += "WHERE VMNEG_NUMNEG = '" + numneg +"'";
					ps3 = con.prepareStatement(query);
					ps3.execute();	
				}
			}
		} 
		catch (SQLException e)  {
			e.printStackTrace();
		}finally{
			if(rs != null){
				rs.close();
			}
			if(ps != null){
				ps.close();
			}
		}	
	}


}
